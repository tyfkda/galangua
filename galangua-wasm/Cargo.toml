[package]
name = "galangua-wasm"
version = "0.9.2"
authors = ["tyfkda <tyfkda@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.81"
wasm-bindgen-futures = "0.4.31"
js-sys = "0.3.58"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

galangua-common = { path = "../mods/galangua-common" }
galangua-ecs = { path = "../mods/galangua-ecs", default-features = false, features = ["wasm"] }

[dependencies.web-sys]
version = "0.3.58"
features = [
    "console", "Window", "Document", "Element",
    "HtmlImageElement", "HtmlCanvasElement", "CanvasRenderingContext2d",
    "Headers", "Request", "RequestInit", "RequestMode", "Response", "ReadableStream",
]

[dev-dependencies]
wasm-bindgen-test = "0.3.31"

#[profile.release]
# Tell `rustc` to optimize for small code size.
#opt-level = "s"
